(include "./powermenu/eww.yuck")

(defvar osd_last "")
(defvar osd_open false)


(defpoll time :interval "20s"
	`date +"%I:%M %p - %A %e"`)

(deflisten workspaces :initial "[]" "bash ~/.config/eww/bar/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/bar/scripts/get-active-workspace")
(defwidget workspaces []
  (box :class "workspaces" :space-evenly true
    (label :text "${workspaces}${current_workspace}" :visible false)
    (for workspace in workspaces
      (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}" :cursor "pointer"
        (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : workspace.windows > 0 ? "occupied" : "empty"}"
          (label :text "${workspace.id}")
          )
        )
      )
    )
  )

(deflisten media-title :initial ""
  "playerctl --player=spotify --follow metadata --format '{{ artist }} - {{ title }}' || true")

(deflisten media-status :initial ""
  "playerctl --player=spotify --follow status")
(defvar media_reveal false)
(defwidget player [] 
  (eventbox :cursor "pointer"
    (box :space-evenly false:space-evenly false
      (revealer 
        :reveal {!media_reveal} 
        :transition "slideleft"
        :duration "100ms"
        (button :class "media-button ${media-status == "Playing" ? "active" : "passive"}" 
          :onrightclick "eww update media_reveal=${!media_reveal}"
          :onclick "playerctl --player=spotify play-pause"
          ""
        )
      )
      (revealer 
        :reveal media_reveal 
        :transition "slideright"
        (button :class "media-text" :onrightclick "eww update media_reveal=${!media_reveal}"
          (label :show-truncated "false" :text "${media-title != "" ? media-title : "No Music"}" )
        )
      )
    )
  )
)

(defvar battery_reveal false)
(defwidget battery []
  (eventbox :cursor "pointer" :onclick "eww update battery_reveal=${!battery_reveal}"
    (box 
      :class "battery ${EWW_BATTERY["BAT0"].status == "Discharging" ? 
        EWW_BATTERY["BAT0"].capacity <= 30 ? "b30" : EWW_BATTERY["BAT0"].capacity <= 60 ? "b60" : "b100" : "AC"}" 
      :space-evenly false
      (label :text "${EWW_BATTERY["BAT0"].status == "Discharging" ? "󰂄" : ""}" )
      (revealer 
        :reveal battery_reveal 
        :transition "slideright"
        :duration "200ms"
        (label :text "${EWW_BATTERY["BAT0"].capacity}" :style "margin-left: 4px;")
      )
    )
  )
)

(defwidget powerbutton []
  (eventbox :cursor "pointer"
    (button :class "powermenu-button" :onclick "${EWW_CMD} open --toggle powermenu" "⏻")
  )
)

(defwidget bluetoothbutton []
  (eventbox :cursor "pointer"
    (button :class "bluetooth-button" :onclick "sh -c 'overskride &'" "")
  )
)


(defwidget leftStuff []
  (box :class "left-stuff" :orientation "h" :space-evenly false :halign "start"
    (workspaces :class "workspaces")
    (player)
  )
)
(defwidget centerStuff []
  (box :class "center-stuff" :orientation "h" :space-evenly false :halign "center"
    (label 
          :text {time})
  )
)
(defwidget rightStuff []
  (box  :orientation "h" :space-evenly false :halign "end"
    (bluetoothbutton)
    (eventbox :cursor "pointer"
      (systray 
        :class "systray"
        :spacing 8
        :icon-size 16
        :prepend-new true
      )
    )
    (battery)
    (powerbutton)
  )
)


(defwidget widgets []
  (centerbox :orientation "h"
    (leftStuff)
    (centerStuff)
    (rightStuff)
  )
)
(defwindow bar
           :monitor 0
           :geometry (geometry :x "0%"
                               :y "0%"
                               :width "100%"
                               :height "40px"
                               :anchor "top center")
           :stacking "fg"
           :exclusive true
    (widgets)
)

